apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-svc
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      appID: demo-svc
  template:
    metadata:
      annotations:
        # https://developer.ibm.com/tutorials/monitoring-kubernetes-prometheus/
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
        # "sidecar.jaegertracing.io/inject": "true"  # https://access.redhat.com/documentation/en-us/openshift_container_platform/4.4/html/jaeger/jaeger-sidecar-automatic_jaeger-deploying
        # sidecar.opentelemetry.io/inject: "true"  # https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-operator#install-opentelemetry-collector
      labels:
        appID: demo-svc
    spec:
      containers:
      - name: java
        image: demo-svc:dont_push
        imagePullPolicy: IfNotPresent
        # --add-opens java.base/java.lang=ALL-UNNAMED - https://stackoverflow.com/questions/68168691/java-lang-reflect-inaccessibleobjectexception-unable-to-make-protected-final-ja
        # -Dote.exporter.otlp.endpoint=http://signoz-otel-collector.signoz.svc:4317 - signoz installed in signoz namespace
        # -Dote.exporter.otlp.endpoint=http://opentelemetry-collector.otel.svc:4317 - opentelemetry-collector installed in otel namespace
        command: ["java",
                  "--add-opens", "java.base/java.lang=ALL-UNNAMED",
                  "-javaagent:/opentelemetry-javaagent.jar",
                  "-Dotel.resource.attributes=service.name=demo-svc",
                  "-Dotel.exporter.otlp.endpoint=http://opentelemetry-collector.otel.svc:4317",
                  "-jar", "/app.jar"]
        ports:
        - containerPort: 8080
        env:
        # just in case useful for accessing any daemonset
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
